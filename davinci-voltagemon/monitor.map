Archive member included because of file (symbol)

/opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
                              /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o (exit)
/opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
                              monitor.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

rail2               0x2               monitor.o
rail3               0x2               monitor.o
rail1               0x2               monitor.o
logic               0x2               monitor.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o
LOAD monitor.o
LOAD leds.o
LOAD adc.o
START GROUP
LOAD /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a
LOAD /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/libm.a
LOAD /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x436
 *(.vectors)
 .vectors       0x0000000000000000       0x18 /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000018                . = ALIGN (0x2)
                0x0000000000000018                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000018        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000018                __trampolines_end = .
 *(.progmem*)
                0x0000000000000018                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000018                __ctors_start = .
 *(.ctors)
                0x0000000000000018                __ctors_end = .
                0x0000000000000018                __dtors_start = .
 *(.dtors)
                0x0000000000000018                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000018        0x0 /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o
                0x0000000000000018                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000018        0x8 /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000020       0x10 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000020                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000030        0x4 /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o
 *(.init9)
 *(.text)
 .text          0x0000000000000034        0x2 /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o
                0x0000000000000034                __vector_10
                0x0000000000000034                __bad_interrupt
                0x0000000000000034                __vector_6
                0x0000000000000034                __vector_11
                0x0000000000000034                __vector_7
                0x0000000000000034                __vector_5
                0x0000000000000034                __vector_4
                0x0000000000000034                __vector_9
                0x0000000000000034                __vector_2
                0x0000000000000034                __vector_8
                0x0000000000000034                __vector_1
 .text          0x0000000000000036      0x258 monitor.o
                0x0000000000000036                checkRails
                0x0000000000000110                setLEDs
                0x000000000000017e                initTimer
                0x0000000000000192                __vector_3
                0x0000000000000254                derpBlink
 .text          0x000000000000028e      0x144 leds.o
                0x000000000000028e                setLED
                0x0000000000000398                initLEDs
 .text          0x00000000000003d2       0x48 adc.o
                0x00000000000003d2                initADC
                0x00000000000003dc                getAdc
                0x0000000000000410                getVCCVolts
 .text          0x000000000000041a        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .text          0x000000000000041a        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000041a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000041a       0x18 monitor.o
                0x000000000000041a                main
 .text.libgcc.mul
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000432                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000432        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
                0x0000000000000432                exit
                0x0000000000000432                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000432        0x4 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000436                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000436
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o
 .data          0x0000000000800060        0x0 monitor.o
 .data          0x0000000000800060        0x0 leds.o
 .data          0x0000000000800060        0x0 adc.o
 .data          0x0000000000800060        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0xa
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o
 .bss           0x0000000000800060        0x2 monitor.o
                0x0000000000800060                state
 .bss           0x0000000000800062        0x0 leds.o
 .bss           0x0000000000800062        0x0 adc.o
 .bss           0x0000000000800062        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000800062        0x0 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800062        0x8 monitor.o
                0x0000000000800062                rail2
                0x0000000000800064                rail3
                0x0000000000800066                rail1
                0x0000000000800068                logic
                0x000000000080006a                PROVIDE (__bss_end, .)
                0x0000000000000436                __data_load_start = LOADADDR (.data)
                0x0000000000000436                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080006a        0x0
                0x000000000080006a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080006a                PROVIDE (__noinit_end, .)
                0x000000000080006a                _end = .
                0x000000000080006a                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x132c
 *(.stab)
 .stab          0x0000000000000000      0x9cc monitor.o
 .stab          0x00000000000009cc      0x45c leds.o
                                        0x648 (size before relaxing)
 .stab          0x0000000000000e28      0x3e4 adc.o
                                        0x600 (size before relaxing)
 .stab          0x000000000000120c       0x6c /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000001278       0xb4 /opt/local/lib/gcc/avr/4.9.1/tiny-stack/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000      0xfa0
 *(.stabstr)
 .stabstr       0x0000000000000000      0xfa0 monitor.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 monitor.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 leds.o
 .comment       0x0000000000000000       0x12 adc.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x2dc
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x2dc /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o

.debug_abbrev   0x0000000000000000      0x2b6
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x2b6 /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000       0xfa
 *(.debug_str)
 .debug_str     0x0000000000000000       0xfa /opt/local/lib/gcc/avr/4.9.1/../../../../avr/lib/tiny-stack/crttn26.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(monitor.elf elf32-avr)
LOAD linker stubs
